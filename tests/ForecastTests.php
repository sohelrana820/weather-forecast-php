<?php

use SohelRana820\Forecast\Forecast;

/**
 *
 */
define("API_KEY", '7201175b43264d2ba9916983aa2a2cc2');
/**
 *
 */
define("DEFAULT_LATITUDE", '42.3601');
/**
 *
 */
define("DEFAULT_LONGIUDE", '-71.0589');

/**
 * Class ForecastTests
 */
class ForecastTests extends PHPUnit_Framework_TestCase
{
    /**
     * @var Forecast
     */
    protected $forecast;
    /**
     * @var Forecast;
     */
    protected $response;

    /**
     *
     */
    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->forecast = new Forecast(API_KEY);
        $this->forecast->setLatitude(DEFAULT_LATITUDE);
        $this->forecast->setLongitude(DEFAULT_LATITUDE);
        $this->response = $this->forecast->request();
    }

    /**
     *
     */
    public function testValidRequest()
    {
        $forecast = new Forecast('invalid api key');
        $forecast->setLatitude('');
        $forecast->setLongitude('');
        $this->assertNull($forecast->request());
    }

    /**
     *
     */
    public function testSecretKeySetterGetter()
    {
        $forecast = new Forecast();
        $forecast->setSecretKey('1111');
        $this->assertEquals('1111', $forecast->getSecretKey());
    }

    /**
     *
     */
    public function testTimezoneGetter()
    {
        $this->assertNotNull($this->response->getTimezone());
    }

    /**
     *
     */
    public function testRequestResponseIsObject()
    {
        $this->assertTrue(is_object($this->response));
    }

    /**
     *
     */
    public function testWeatherCurrentlyData()
    {
        $this->assertTrue(is_array($this->response->getCurrentlyData()));
    }

    /**
     *
     */
    public function testWeatherHourlyData()
    {
        $this->assertTrue(is_array($this->response->getHourlyData()));
    }

    /**
     *
     */
    public function testWeatherDailyData()
    {
        $this->assertTrue(is_array($this->response->getDailyData()));
    }

    /**
     *
     */
    public function testFlags()
    {
        $this->assertTrue(is_array($this->response->getFlags()));
    }
}
